A:500$
c:0.2777$
y(A,c,v0,x):=A*%e^(-c*x/v0)/(1+%e^(-c*x/v0));

tangente(x,v0):=''(diff(y(A,c,v0,x),x));

biseccion(f,a,b,niteraciones,precision):=block(n:0,x0:a,x1:b,
    while (n<niteraciones and abs(x1-x0)>precision)
        do (
            n:n+1,x2:(x0+x1)/2,
            if ev(f,x=x2)=0 then
                return(float(x2))
            else
                if(ev(f,x=x2)*ev(f,x=x0)<0) then x1:x2 else x0:x2),
    float(x2)
);
reglafalsa(f,a,b,niteraciones,tolerancia):=block(n:0,x0:a,x1:b,x2:x0,
     while (n<niteraciones and abs(ev(f,x=x2))>tolerancia)
         do (n:n+1,disp(float([x0,x1])),x2:(x0*ev(f,x=x1)-x1*ev(f,x=x0))/(ev(f,x=x1)-ev(f,x=x0)),
     if(ev(f,x=x2)*ev(f,x=x0)<0) then x1:x2 else x0:x2),
     float(x2)
 );
/* TODO reuse
inclinacion(y):=block(
    diffy(x):=diff(y(x),x),
    min_tan: biseccion(diffy(x), -1, 1, 50, 0.001),
    min_inclinacion:bfloat(atan(min_tan)*180/%pi),
    return(min_inclinacion)
);

TODO fix min calculation
min_tan: reglafalsa(tangente(x,55), -1, 1, 50, 0.001);
min_tan: reglafalsa(tangente(x,200), -1, 1, 50, 0.001);
*/
min_tan:tangente(0,55);
min_inclinacion:bfloat(atan(min_tan)*180/%pi);
printf(true,"(v0=55) tan: ~f, inclinacion: ~f~%", min_tan, min_inclinacion);

min_tan:tangente(0,200);
min_inclinacion:bfloat(atan(min_tan)*180/%pi);
printf(true,"(v0=200) tan: ~f, inclinacion: ~f~%", min_tan, min_inclinacion);

printf(true,"1.1~%");
x0:last(float(solve(490=y(A,c,55,x))));
printf(true, ": ~a~%", -x0);

printf(true,"1.2~%");

plot2d(
[y(A,c,55,x),y(A,c,100,x),y(A,c,150,x),y(A,c,220,x)],
[x,-5000,5000],
[legend,"v0=55","v0=100","v0=100","v0=220"]);

printf(true,"Opcionalmente puedes ejecutar plot_inclinacion() para ver la función de la tangente~%");
plot_inclinacion():=plot2d(
[tangente(x,55),tangente(x,200)],
[x,-5000,5000],
[legend,"inclinacion v0: 55","inclinacion v0: 200"]);

printf(true,"1.3~%");
min_v0:solve(-14=tangente(0,v0))$
printf(true, "v0 minima para la maniobra: ~f~%", float(min_v0));

printf(true,"1.4");
pos_vertical:limit(tangente(x,200),x,inf);
printf(true, "posición del eje del avión respecto a la horizontal de la pista: ~f~%", pos_vertical);
